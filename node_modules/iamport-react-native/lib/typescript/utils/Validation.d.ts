declare class Validation {
    userCode: string;
    loading: object;
    callback: ((response: any) => any) | undefined;
    data: IMPData.CertificationData | IMPData.PaymentData | undefined;
    isValid: boolean;
    message: string;
    constructor(userCode: string, loading: object, callback?: (response: any) => any, data?: IMPData.CertificationData | IMPData.PaymentData);
    validateUserCode(): void;
    validateLoading(): void;
    validateCallback(): void;
    validateData(): void;
    getIsValid(): boolean;
    getMessage(): string;
}
declare namespace IMPData {
    interface ICertificationData {
        merchant_uid: string;
        company: string;
        carrier: string;
        name: string;
        phone: string;
        pg?: string;
        min_age?: string;
        popup?: boolean;
        m_redirect_url?: string;
    }
    export class CertificationData implements ICertificationData {
        constructor(carrier: string, company: string, merchant_uid: string, name: string, phone: string, pg?: string, min_age?: string, popup?: boolean, m_redirect_url?: string);
        carrier: string;
        company: string;
        merchant_uid: string;
        name: string;
        phone: string;
        pg?: string;
        min_age?: string;
        popup?: boolean;
        m_redirect_url?: string;
    }
    interface IPaymentData {
        pg: string;
        pay_method: string;
        currency?: string;
        notice_url?: string | string[];
        display?: {
            card_quota: number[];
        };
        merchant_uid: string;
        amount: string | number;
        buyer_tel: string;
        app_scheme?: string;
        escrow: boolean;
        name: string;
        tax_free?: number;
        buyer_name: string;
        buyer_email: string;
        buyer_addr?: string;
        buyer_postcode?: string;
        custom_data?: object;
        vbank_due?: string;
        popup?: boolean;
        digital?: boolean;
        language?: string;
        biz_num?: string;
        customer_uid?: string;
        naverPopupMode?: boolean;
        naverUseCfm?: string;
        naverProducts?: object[];
        m_redirect_url?: string;
        niceMobileV2?: boolean;
        bypass?: {
            daou?: {
                PRODUCTCODE?: string;
                CASHRECEIPTFLAG: number;
            };
        };
    }
    export class PaymentData implements IPaymentData {
        constructor(amount: string | number, buyer_email: string, buyer_name: string, buyer_tel: string, escrow: boolean, merchant_uid: string, name: string, pay_method: string, pg: string, language?: string, naverPopupMode?: boolean, naverProducts?: object[], naverUseCfm?: string, niceMobileV2?: boolean, notice_url?: string | string[], m_redirect_url?: string, currency?: string, custom_data?: object, customer_uid?: string, digital?: boolean, display?: {
            card_quota: number[];
        }, buyer_postcode?: string, app_scheme?: string, biz_num?: string, buyer_addr?: string, popup?: boolean, tax_free?: number, vbank_due?: string, bypass?: {
            daou?: {
                PRODUCTCODE?: string;
                CASHRECEIPTFLAG: number;
            };
        });
        amount: string | number;
        app_scheme?: string;
        biz_num?: string;
        buyer_addr?: string;
        buyer_email: string;
        buyer_name: string;
        buyer_postcode?: string;
        buyer_tel: string;
        currency?: string;
        custom_data?: object;
        customer_uid?: string;
        digital?: boolean;
        display?: {
            card_quota: number[];
        };
        escrow: boolean;
        language?: string;
        m_redirect_url?: string;
        merchant_uid: string;
        name: string;
        naverPopupMode?: boolean;
        naverProducts?: object[];
        naverUseCfm?: string;
        niceMobileV2?: boolean;
        notice_url?: string | string[];
        pay_method: string;
        pg: string;
        popup?: boolean;
        tax_free?: number;
        vbank_due?: string;
        bypass?: {
            daou?: {
                PRODUCTCODE?: string;
                CASHRECEIPTFLAG: number;
            };
        };
    }
    export {};
}
export { Validation, IMPData };
//# sourceMappingURL=Validation.d.ts.map